#!/usr/bin/env ruby
# frozen_string_literal: true

require 'gli'

require 'appmap/version'
require 'appmap/hook'

class App
  extend GLI::App

  program_desc 'AppMap CLI'

  version AppMap::VERSION

  subcommand_option_handling :normal
  arguments :strict
  preserve_argv true

  desc 'AppMap configuration file name'
  default_value ENV['APPMAP_CONFIG'] || '.appmap.yml'
  arg_name 'filename'
  flag %i[c config]

  desc 'Creates base configuration file for the current project'
  command :init do |c|
    c.action do
      require 'appmap/command/init'
      AppMap::Command::Init.new(@config_file).perform
    end
  end

  pre do |global, _, _, _|
    @config_file = global[:config]
    @config = interpret_config_option(@config_file) if File.exist?(@config_file)
    true
  end

  class << self
    protected

    def interpret_config_option(fname)
      require 'appmap/config'
      AppMap::Config.load_from_file fname
    end
  end
end

exit App.run(ARGV)