#!/usr/bin/env ruby

require 'json'

$LOAD_PATH.unshift File.join(File.dirname(__FILE__), '../lib')

require 'appmap'
require 'appmap/inspect'
require 'appmap/config'
require 'appmap/feature'
require 'shellwords'

def usage
  warn 'Usage: record (program-arg)+'
  exit 1
end

program = ARGV.shift || usage

config = AppMap::Config.load_from_file('.appmap.yml')
features = config.map(&AppMap::Inspect.method(:detect_features))
features = features.map(&:reparent)
features.each(&:prune)
functions = features.map(&:collect_functions).flatten

require 'appmap/trace/tracer'

tracer = AppMap::Trace.tracer = AppMap::Trace::Tracer.new(functions)
AppMap::Trace::Tracer.trace tracer

events = []
quit = false
event_thread = Thread.new do
  while tracer.event? || !quit
    event = tracer.next_event
    if event
      events << event.to_h
    else
      sleep 0.0001
    end
  end
end
event_thread.abort_on_exception = true

at_exit do
  quit = true
  event_thread.join
  File.write('appmap.json', JSON.generate(classMap: features, events: events))
end

load program
